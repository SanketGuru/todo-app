apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 26
    defaultConfig {
        applicationId "com.sanketguru.notesapp"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode Versions.appVersionCode
        versionName Versions.appVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
//kapt {
//    generateStubs = true
//}
androidExtensions {
    experimental = true
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    //region Suppotr Lib
    implementation Dependencie.support_appcompat_v7
    implementation Dependencie.support_design
    implementation Dependencie.support_vector_drawable
    implementation Dependencie.support_v4
    implementation Dependencie.support_palette_v7
    implementation Dependencie.support_cardview_v7
    implementation Dependencie.support_gridlayout_v7

    //endregion
    implementation Dependencie.constraint_layout
    implementation Dependencie.fresco
    implementation Dependencie.inject
    implementation Dependencie.timber

    //region Retro Fit
    implementation Dependencie.retrofit

    //adapter
    implementation Dependencie.retrofit_rxjava_adapter

    // JSON Parsing
    implementation Dependencie.gson
    implementation Dependencie.retrofit_converter

    //endregion

    //region ReactiveX
    implementation Dependencie.rxjava
    implementation Dependencie.rxAndroid
    implementation Dependencie.rxKotlin
    implementation Dependencie.rxBinding

    //region Dagger Android
    kapt "com.google.dagger:dagger-compiler:$project.daggerVersion"
    compile "com.google.dagger:dagger:$project.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$project.daggerVersion"

    //    compile "com.google.dagger:dagger-android-support:$project.daggerVersion"

    //

    //    // if you are not using support library, include this instead

    //    compile "com.google.dagger:dagger-android:$project.daggerVersion"

    //endregion
    compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    //Lifecycle
    implementation Dependencie.lifecycle_runtime
    annotationProcessor Dependencie.lifecycle_compiler
    implementation Dependencie.java
    implementation Dependencie.paging_runtime

    //LiveData and view model
    implementation Dependencie.extensions
    implementation Dependencie.reactivestreams
    compile project(':data')
    implementation project(':domain')

    /*compile "com.xwray:groupie:$project.groupieVersion"
        compile "com.xwray:groupie-kotlin-android-extensions:$project.groupieVersion"*/

    //paging

    //http://androidkt.com/paging-library/

    //implementation "android.arch.paging:runtime:1.0.0-alpha3"

    //Room

    //implementation "android.arch.persistence.room:runtime:1.0.0"

    //annotationProcessor "android.arch.persistence.room:compiler:1.0.0"

    //implementation "android.arch.persistence.room:rxjava2:1.0.0"

    //endregion

    // Koin for Android
    compile Dependencie.koin

    // or Koin for Android Architecture (if needed)
    compile Dependencie.koin_android_architecture
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
